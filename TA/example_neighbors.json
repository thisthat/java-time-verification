[ {
  "start" : 18,
  "end" : 634,
  "nodeType" : "ASTClass",
  "code" : "class TestNeighbors extends Thread {\n\n    int NUM_PING = 10;\n\n    List neighbors = List();\n\n    boolean is_alive(IpAddress address, long timeout) {\n        try{\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n            //}\n        } catch (DeadlineException e) {\n            return false;\n        }\n    }\n\n    void run() {\n\n        for (IpAddress curr : this.neighbors) {\n\n            bool isAlive = this.is_alive(100);\n            curr.setAlive(is_alive);\n\n            sleep(1000);\n        }\n    }\n}",
  "line" : 3,
  "lineEnd" : -1,
  "identifier" : null,
  "constraint" : null,
  "packageName" : "example",
  "methods" : [ {
    "start" : 114,
    "end" : 438,
    "nodeType" : "ASTMethod",
    "code" : "boolean is_alive(IpAddress address, long timeout) {\n        try{\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n            //}\n        } catch (DeadlineException e) {\n            return false;\n        }\n    }",
    "line" : 9,
    "lineEnd" : 19,
    "identifier" : null,
    "constraint" : null,
    "name" : "is_alive",
    "returnType" : "boolean",
    "returnTypeUnit" : "UNKNOWN",
    "parameters" : [ {
      "start" : 131,
      "end" : 148,
      "nodeType" : "ASTVariable",
      "code" : "IpAddress address",
      "line" : 9,
      "lineEnd" : 9,
      "identifier" : null,
      "constraint" : null,
      "name" : "address",
      "type" : "IpAddress",
      "unit" : "UNKNOWN",
      "typePointed" : "example.IpAddress",
      "typeNoArray" : "IpAddress",
      "timeCritical" : false
    }, {
      "start" : 150,
      "end" : 162,
      "nodeType" : "ASTVariable",
      "code" : "long timeout",
      "line" : 9,
      "lineEnd" : 9,
      "identifier" : null,
      "constraint" : null,
      "name" : "timeout",
      "type" : "long",
      "unit" : "UNKNOWN",
      "typePointed" : "long",
      "typeNoArray" : "long",
      "timeCritical" : false
    } ],
    "exceptionsThrowed" : [ ],
    "stms" : [ {
      "start" : 174,
      "end" : 432,
      "nodeType" : "ASTTry",
      "code" : "try{\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n            //}\n        } catch (DeadlineException e) {\n            return false;\n        }",
      "line" : 10,
      "lineEnd" : 18,
      "identifier" : null,
      "constraint" : null,
      "tryBranch" : {
        "start" : 177,
        "end" : 366,
        "nodeType" : "ASTTryBranch",
        "code" : "{\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n            //}\n        }",
        "line" : 10,
        "lineEnd" : 16,
        "identifier" : null,
        "constraint" : null,
        "stms" : [ {
          "start" : 178,
          "end" : 341,
          "nodeType" : "ASTDeadline",
          "code" : "\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n",
          "line" : 10,
          "lineEnd" : 15,
          "identifier" : null,
          "constraint" : null,
          "stms" : [ {
            "start" : 229,
            "end" : 261,
            "nodeType" : "ASTRE",
            "code" : "this.send_icmp_request(address);",
            "line" : 12,
            "lineEnd" : 12,
            "identifier" : null,
            "constraint" : null,
            "expression" : {
              "start" : 229,
              "end" : 260,
              "nodeType" : "ASTMethodCall",
              "code" : "this.send_icmp_request(address)",
              "line" : 12,
              "lineEnd" : 12,
              "identifier" : null,
              "constraint" : null,
              "methodName" : "send_icmp_request",
              "exprCallee" : {
                "start" : 229,
                "end" : 233,
                "nodeType" : "ASTLiteral",
                "code" : "this",
                "line" : 12,
                "lineEnd" : 12,
                "identifier" : null,
                "constraint" : null,
                "value" : "this",
                "timeCritical" : false
              },
              "parameters" : [ {
                "start" : 252,
                "end" : 259,
                "nodeType" : "ASTLiteral",
                "code" : "address",
                "line" : 12,
                "lineEnd" : 12,
                "identifier" : null,
                "constraint" : null,
                "value" : "address",
                "timeCritical" : false
              } ],
              "classPointed" : null,
              "timeCall" : false,
              "timeCritical" : false
            },
            "usedVars" : [ "this", "address" ],
            "env" : [ ],
            "isResetTime" : false,
            "resetExpression" : "",
            "expressionName" : "call_to_send_icmp_request",
            "timeCritical" : false
          }, {
            "start" : 278,
            "end" : 311,
            "nodeType" : "ASTRE",
            "code" : "this.receive_icmp_reply(address);",
            "line" : 13,
            "lineEnd" : 13,
            "identifier" : null,
            "constraint" : null,
            "expression" : {
              "start" : 278,
              "end" : 310,
              "nodeType" : "ASTMethodCall",
              "code" : "this.receive_icmp_reply(address)",
              "line" : 13,
              "lineEnd" : 13,
              "identifier" : null,
              "constraint" : null,
              "methodName" : "receive_icmp_reply",
              "exprCallee" : {
                "start" : 278,
                "end" : 282,
                "nodeType" : "ASTLiteral",
                "code" : "this",
                "line" : 13,
                "lineEnd" : 13,
                "identifier" : null,
                "constraint" : null,
                "value" : "this",
                "timeCritical" : false
              },
              "parameters" : [ {
                "start" : 302,
                "end" : 309,
                "nodeType" : "ASTLiteral",
                "code" : "address",
                "line" : 13,
                "lineEnd" : 13,
                "identifier" : null,
                "constraint" : null,
                "value" : "address",
                "timeCritical" : false
              } ],
              "classPointed" : null,
              "timeCall" : false,
              "timeCritical" : false
            },
            "usedVars" : [ "this", "address" ],
            "env" : [ ],
            "isResetTime" : false,
            "resetExpression" : "",
            "expressionName" : "call_to_receive_icmp_reply",
            "timeCritical" : false
          }, {
            "start" : 328,
            "end" : 340,
            "nodeType" : "ASTReturn",
            "code" : "return true;",
            "line" : 14,
            "lineEnd" : 14,
            "identifier" : null,
            "constraint" : null,
            "expr" : {
              "start" : 335,
              "end" : 339,
              "nodeType" : "ASTRE",
              "code" : "true",
              "line" : 14,
              "lineEnd" : 14,
              "identifier" : null,
              "constraint" : null,
              "expression" : {
                "start" : 335,
                "end" : 339,
                "nodeType" : "ASTLiteral",
                "code" : "true",
                "line" : 14,
                "lineEnd" : 14,
                "identifier" : null,
                "constraint" : null,
                "value" : "true",
                "timeCritical" : false
              },
              "usedVars" : [ "true" ],
              "env" : [ ],
              "isResetTime" : false,
              "resetExpression" : "",
              "expressionName" : "true",
              "timeCritical" : false
            },
            "timeCritical" : false
          } ],
          "expr" : {
            "start" : 187,
            "end" : 194,
            "nodeType" : "ASTRE",
            "code" : "    //d",
            "line" : 11,
            "lineEnd" : 11,
            "identifier" : null,
            "constraint" : null,
            "expression" : {
              "start" : 187,
              "end" : 194,
              "nodeType" : "ASTLiteral",
              "code" : "    //d",
              "line" : 11,
              "lineEnd" : 11,
              "identifier" : null,
              "constraint" : null,
              "value" : "timeout",
              "timeCritical" : false
            },
            "usedVars" : [ "timeout" ],
            "env" : [ ],
            "isResetTime" : false,
            "resetExpression" : "",
            "expressionName" : "timeout",
            "timeCritical" : false
          },
          "timeCritical" : false
        } ],
        "timeCritical" : false
      },
      "catchBranch" : [ {
        "start" : 367,
        "end" : 432,
        "nodeType" : "ASTCatchBranch",
        "code" : "catch (DeadlineException e) {\n            return false;\n        }",
        "line" : 16,
        "lineEnd" : 18,
        "identifier" : null,
        "constraint" : null,
        "stms" : [ {
          "start" : 409,
          "end" : 422,
          "nodeType" : "ASTReturn",
          "code" : "return false;",
          "line" : 17,
          "lineEnd" : 17,
          "identifier" : null,
          "constraint" : null,
          "expr" : {
            "start" : 416,
            "end" : 421,
            "nodeType" : "ASTRE",
            "code" : "false",
            "line" : 17,
            "lineEnd" : 17,
            "identifier" : null,
            "constraint" : null,
            "expression" : {
              "start" : 416,
              "end" : 421,
              "nodeType" : "ASTLiteral",
              "code" : "false",
              "line" : 17,
              "lineEnd" : 17,
              "identifier" : null,
              "constraint" : null,
              "value" : "false",
              "timeCritical" : false
            },
            "usedVars" : [ "false" ],
            "env" : [ {
              "type" : "example.DeadlineException",
              "name" : "e",
              "id" : "e"
            }, {
              "type" : "int",
              "name" : "NUM_PING",
              "id" : "NUM_PING"
            }, {
              "type" : "example.List",
              "name" : "neighbors",
              "id" : "neighbors"
            } ],
            "isResetTime" : false,
            "resetExpression" : "",
            "expressionName" : "false",
            "timeCritical" : false
          },
          "timeCritical" : false
        } ],
        "expr" : {
          "start" : 374,
          "end" : 393,
          "nodeType" : "ASTVariable",
          "code" : "DeadlineException e",
          "line" : 16,
          "lineEnd" : 16,
          "identifier" : null,
          "constraint" : null,
          "name" : "e",
          "type" : "DeadlineException",
          "unit" : "UNKNOWN",
          "typePointed" : "example.DeadlineException",
          "typeNoArray" : "DeadlineException",
          "timeCritical" : false
        },
        "timeCritical" : false
      } ],
      "finallyBranch" : null,
      "timeCritical" : false
    } ],
    "declaredVar" : [ ],
    "timeVars" : [ ],
    "abstract" : false,
    "static" : false,
    "signature" : [ "IpAddress", "long" ],
    "synchronized" : false,
    "timeCritical" : false
  }, {
    "start" : 444,
    "end" : 632,
    "nodeType" : "ASTMethod",
    "code" : "void run() {\n\n        for (IpAddress curr : this.neighbors) {\n\n            bool isAlive = this.is_alive(100);\n            curr.setAlive(is_alive);\n\n            sleep(1000);\n        }\n    }",
    "line" : 21,
    "lineEnd" : 30,
    "identifier" : null,
    "constraint" : null,
    "name" : "run",
    "returnType" : "void",
    "returnTypeUnit" : "UNKNOWN",
    "parameters" : [ ],
    "exceptionsThrowed" : [ ],
    "stms" : [ {
      "start" : 466,
      "end" : 626,
      "nodeType" : "ASTForEach",
      "code" : "for (IpAddress curr : this.neighbors) {\n\n            bool isAlive = this.is_alive(100);\n            curr.setAlive(is_alive);\n\n            sleep(1000);\n        }",
      "line" : 23,
      "lineEnd" : 29,
      "identifier" : null,
      "constraint" : null,
      "var" : {
        "start" : 471,
        "end" : 485,
        "nodeType" : "ASTVariable",
        "code" : "IpAddress curr",
        "line" : 23,
        "lineEnd" : 23,
        "identifier" : null,
        "constraint" : null,
        "name" : "curr",
        "type" : "IpAddress",
        "unit" : "UNKNOWN",
        "typePointed" : "example.IpAddress",
        "typeNoArray" : "IpAddress",
        "timeCritical" : false
      },
      "expr" : {
        "start" : 488,
        "end" : 502,
        "nodeType" : "ASTRE",
        "code" : "this.neighbors",
        "line" : 23,
        "lineEnd" : 23,
        "identifier" : null,
        "constraint" : null,
        "expression" : {
          "start" : 488,
          "end" : 502,
          "nodeType" : "ASTAttributeAccess",
          "code" : "this.neighbors",
          "line" : 23,
          "lineEnd" : 23,
          "identifier" : null,
          "constraint" : null,
          "attributeName" : "neighbors",
          "variableName" : {
            "start" : 488,
            "end" : 492,
            "nodeType" : "ASTLiteral",
            "code" : "this",
            "line" : 23,
            "lineEnd" : 23,
            "identifier" : null,
            "constraint" : null,
            "value" : "this",
            "timeCritical" : false
          },
          "timeCritical" : false
        },
        "usedVars" : [ "this" ],
        "env" : [ {
          "type" : "example.IpAddress",
          "name" : "curr",
          "id" : "curr"
        }, {
          "type" : "example.bool",
          "name" : "isAlive",
          "id" : "isAlive"
        }, {
          "type" : "int",
          "name" : "NUM_PING",
          "id" : "NUM_PING"
        }, {
          "type" : "example.List",
          "name" : "neighbors",
          "id" : "neighbors"
        } ],
        "isResetTime" : false,
        "resetExpression" : "",
        "expressionName" : "ASTAttributeAccess",
        "timeCritical" : false
      },
      "stms" : [ {
        "start" : 519,
        "end" : 553,
        "nodeType" : "ASTRE",
        "code" : "bool isAlive = this.is_alive(100);",
        "line" : 25,
        "lineEnd" : 25,
        "identifier" : null,
        "constraint" : null,
        "expression" : {
          "start" : 519,
          "end" : 553,
          "nodeType" : "ASTVariableDeclaration",
          "code" : "bool isAlive = this.is_alive(100);",
          "line" : 25,
          "lineEnd" : 25,
          "identifier" : null,
          "constraint" : null,
          "type" : "bool",
          "name" : {
            "start" : 524,
            "end" : 531,
            "nodeType" : "ASTLiteral",
            "code" : "isAlive",
            "line" : 25,
            "lineEnd" : 25,
            "identifier" : null,
            "constraint" : null,
            "value" : "isAlive",
            "timeCritical" : false
          },
          "expr" : {
            "start" : 534,
            "end" : 552,
            "nodeType" : "ASTMethodCall",
            "code" : "this.is_alive(100)",
            "line" : 25,
            "lineEnd" : 25,
            "identifier" : null,
            "constraint" : null,
            "methodName" : "is_alive",
            "exprCallee" : {
              "start" : 534,
              "end" : 538,
              "nodeType" : "ASTLiteral",
              "code" : "this",
              "line" : 25,
              "lineEnd" : 25,
              "identifier" : null,
              "constraint" : null,
              "value" : "this",
              "timeCritical" : false
            },
            "parameters" : [ {
              "start" : 548,
              "end" : 551,
              "nodeType" : "ASTLiteral",
              "code" : "100",
              "line" : 25,
              "lineEnd" : 25,
              "identifier" : null,
              "constraint" : null,
              "value" : "100",
              "timeCritical" : false
            } ],
            "classPointed" : "example.TestNeighbors",
            "timeCall" : false,
            "timeCritical" : false
          },
          "typePointed" : "example.bool",
          "nameString" : "isAlive",
          "timeCritical" : false
        },
        "usedVars" : [ "isAlive", "this", "100" ],
        "env" : [ {
          "type" : "example.IpAddress",
          "name" : "curr",
          "id" : "curr"
        }, {
          "type" : "example.bool",
          "name" : "isAlive",
          "id" : "isAlive"
        }, {
          "type" : "int",
          "name" : "NUM_PING",
          "id" : "NUM_PING"
        }, {
          "type" : "example.List",
          "name" : "neighbors",
          "id" : "neighbors"
        } ],
        "isResetTime" : false,
        "resetExpression" : "",
        "expressionName" : "Declaration_isAlive",
        "timeCritical" : false
      }, {
        "start" : 566,
        "end" : 590,
        "nodeType" : "ASTRE",
        "code" : "curr.setAlive(is_alive);",
        "line" : 26,
        "lineEnd" : 26,
        "identifier" : null,
        "constraint" : null,
        "expression" : {
          "start" : 566,
          "end" : 589,
          "nodeType" : "ASTMethodCall",
          "code" : "curr.setAlive(is_alive)",
          "line" : 26,
          "lineEnd" : 26,
          "identifier" : null,
          "constraint" : null,
          "methodName" : "setAlive",
          "exprCallee" : {
            "start" : 566,
            "end" : 570,
            "nodeType" : "ASTLiteral",
            "code" : "curr",
            "line" : 26,
            "lineEnd" : 26,
            "identifier" : null,
            "constraint" : null,
            "value" : "curr",
            "timeCritical" : false
          },
          "parameters" : [ {
            "start" : 580,
            "end" : 588,
            "nodeType" : "ASTLiteral",
            "code" : "is_alive",
            "line" : 26,
            "lineEnd" : 26,
            "identifier" : null,
            "constraint" : null,
            "value" : "is_alive",
            "timeCritical" : false
          } ],
          "classPointed" : null,
          "timeCall" : false,
          "timeCritical" : false
        },
        "usedVars" : [ "curr", "is_alive" ],
        "env" : [ {
          "type" : "example.IpAddress",
          "name" : "curr",
          "id" : "curr"
        }, {
          "type" : "example.bool",
          "name" : "isAlive",
          "id" : "isAlive"
        }, {
          "type" : "int",
          "name" : "NUM_PING",
          "id" : "NUM_PING"
        }, {
          "type" : "example.List",
          "name" : "neighbors",
          "id" : "neighbors"
        } ],
        "isResetTime" : false,
        "resetExpression" : "",
        "expressionName" : "call_to_setAlive",
        "timeCritical" : false
      }, {
        "start" : 604,
        "end" : 616,
        "nodeType" : "ASTRE",
        "code" : "sleep(1000);",
        "line" : 28,
        "lineEnd" : 28,
        "identifier" : null,
        "constraint" : {
          "elm" : null,
          "category" : "intermediateModelHelper.heuristic.definition.AnnotatedTypes",
          "value" : "1000",
          "line" : 28,
          "runtimeConstraints" : [ {
            "className" : "example.TestNeighbors",
            "methodName" : "run",
            "line" : 28,
            "varName" : "1000"
          } ]
        },
        "expression" : {
          "start" : 604,
          "end" : 615,
          "nodeType" : "ASTMethodCall",
          "code" : "sleep(1000)",
          "line" : 28,
          "lineEnd" : 28,
          "identifier" : null,
          "constraint" : null,
          "methodName" : "sleep",
          "exprCallee" : null,
          "parameters" : [ {
            "start" : 610,
            "end" : 614,
            "nodeType" : "ASTLiteral",
            "code" : "1000",
            "line" : 28,
            "lineEnd" : 28,
            "identifier" : null,
            "constraint" : null,
            "value" : "1000",
            "timeCritical" : false
          } ],
          "classPointed" : "java.lang.Thread",
          "timeCall" : true,
          "timeCritical" : false
        },
        "usedVars" : [ "1000" ],
        "env" : [ {
          "type" : "example.IpAddress",
          "name" : "curr",
          "id" : "curr"
        }, {
          "type" : "example.bool",
          "name" : "isAlive",
          "id" : "isAlive"
        }, {
          "type" : "int",
          "name" : "NUM_PING",
          "id" : "NUM_PING"
        }, {
          "type" : "example.List",
          "name" : "neighbors",
          "id" : "neighbors"
        } ],
        "isResetTime" : false,
        "resetExpression" : "",
        "expressionName" : "call_to_sleep",
        "timeCritical" : true
      } ],
      "timeCritical" : false
    } ],
    "declaredVar" : [ {
      "type" : "bool",
      "name" : "isAlive",
      "id" : "isAlive_0"
    } ],
    "timeVars" : [ "1000" ],
    "abstract" : false,
    "static" : false,
    "signature" : [ ],
    "synchronized" : false,
    "timeCritical" : false
  } ],
  "staticInit" : [ ],
  "name" : "TestNeighbors",
  "accessRight" : "PRIVATE",
  "extendClass" : "Thread",
  "imports" : [ ],
  "attributes" : [ {
    "start" : 60,
    "end" : 78,
    "nodeType" : "ASTAttribute",
    "code" : "int NUM_PING = 10;",
    "line" : 5,
    "lineEnd" : 5,
    "identifier" : null,
    "constraint" : null,
    "accessRight" : "PRIVATE",
    "type" : "int",
    "name" : "NUM_PING",
    "expr" : {
      "start" : 75,
      "end" : 77,
      "nodeType" : "ASTRE",
      "code" : "10",
      "line" : 5,
      "lineEnd" : 5,
      "identifier" : null,
      "constraint" : null,
      "expression" : {
        "start" : 75,
        "end" : 77,
        "nodeType" : "ASTLiteral",
        "code" : "10",
        "line" : 5,
        "lineEnd" : 5,
        "identifier" : null,
        "constraint" : null,
        "value" : "10",
        "timeCritical" : false
      },
      "usedVars" : [ "10" ],
      "env" : [ ],
      "isResetTime" : false,
      "resetExpression" : "",
      "expressionName" : "10",
      "timeCritical" : false
    },
    "typePointed" : "int",
    "typeNoArray" : "int",
    "timeCritical" : false
  }, {
    "start" : 84,
    "end" : 108,
    "nodeType" : "ASTAttribute",
    "code" : "List neighbors = List();",
    "line" : 7,
    "lineEnd" : 7,
    "identifier" : null,
    "constraint" : null,
    "accessRight" : "PRIVATE",
    "type" : "List",
    "name" : "neighbors",
    "expr" : {
      "start" : 101,
      "end" : 107,
      "nodeType" : "ASTRE",
      "code" : "List()",
      "line" : 7,
      "lineEnd" : 7,
      "identifier" : null,
      "constraint" : null,
      "expression" : {
        "start" : 101,
        "end" : 107,
        "nodeType" : "ASTMethodCall",
        "code" : "List()",
        "line" : 7,
        "lineEnd" : 7,
        "identifier" : null,
        "constraint" : null,
        "methodName" : "List",
        "exprCallee" : null,
        "parameters" : [ ],
        "classPointed" : null,
        "timeCall" : false,
        "timeCritical" : false
      },
      "usedVars" : [ ],
      "env" : [ ],
      "isResetTime" : false,
      "resetExpression" : "",
      "expressionName" : "call_to_List",
      "timeCritical" : false
    },
    "typePointed" : "example.List",
    "typeNoArray" : "List",
    "timeCritical" : false
  } ],
  "path" : "/Users/giovanni/repository/java-xal/server/target/classes/TestNeighbors.java",
  "parent" : null,
  "interface" : false,
  "abstract" : false,
  "allMethods" : [ {
    "start" : 114,
    "end" : 438,
    "nodeType" : "ASTMethod",
    "code" : "boolean is_alive(IpAddress address, long timeout) {\n        try{\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n            //}\n        } catch (DeadlineException e) {\n            return false;\n        }\n    }",
    "line" : 9,
    "lineEnd" : 19,
    "identifier" : null,
    "constraint" : null,
    "name" : "is_alive",
    "returnType" : "boolean",
    "returnTypeUnit" : "UNKNOWN",
    "parameters" : [ {
      "start" : 131,
      "end" : 148,
      "nodeType" : "ASTVariable",
      "code" : "IpAddress address",
      "line" : 9,
      "lineEnd" : 9,
      "identifier" : null,
      "constraint" : null,
      "name" : "address",
      "type" : "IpAddress",
      "unit" : "UNKNOWN",
      "typePointed" : "example.IpAddress",
      "typeNoArray" : "IpAddress",
      "timeCritical" : false
    }, {
      "start" : 150,
      "end" : 162,
      "nodeType" : "ASTVariable",
      "code" : "long timeout",
      "line" : 9,
      "lineEnd" : 9,
      "identifier" : null,
      "constraint" : null,
      "name" : "timeout",
      "type" : "long",
      "unit" : "UNKNOWN",
      "typePointed" : "long",
      "typeNoArray" : "long",
      "timeCritical" : false
    } ],
    "exceptionsThrowed" : [ ],
    "stms" : [ {
      "start" : 174,
      "end" : 432,
      "nodeType" : "ASTTry",
      "code" : "try{\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n            //}\n        } catch (DeadlineException e) {\n            return false;\n        }",
      "line" : 10,
      "lineEnd" : 18,
      "identifier" : null,
      "constraint" : null,
      "tryBranch" : {
        "start" : 177,
        "end" : 366,
        "nodeType" : "ASTTryBranch",
        "code" : "{\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n            //}\n        }",
        "line" : 10,
        "lineEnd" : 16,
        "identifier" : null,
        "constraint" : null,
        "stms" : [ {
          "start" : 178,
          "end" : 341,
          "nodeType" : "ASTDeadline",
          "code" : "\n            //deadline(timeout) {\n                this.send_icmp_request(address);\n                this.receive_icmp_reply(address);\n                return true;\n",
          "line" : 10,
          "lineEnd" : 15,
          "identifier" : null,
          "constraint" : null,
          "stms" : [ {
            "start" : 229,
            "end" : 261,
            "nodeType" : "ASTRE",
            "code" : "this.send_icmp_request(address);",
            "line" : 12,
            "lineEnd" : 12,
            "identifier" : null,
            "constraint" : null,
            "expression" : {
              "start" : 229,
              "end" : 260,
              "nodeType" : "ASTMethodCall",
              "code" : "this.send_icmp_request(address)",
              "line" : 12,
              "lineEnd" : 12,
              "identifier" : null,
              "constraint" : null,
              "methodName" : "send_icmp_request",
              "exprCallee" : {
                "start" : 229,
                "end" : 233,
                "nodeType" : "ASTLiteral",
                "code" : "this",
                "line" : 12,
                "lineEnd" : 12,
                "identifier" : null,
                "constraint" : null,
                "value" : "this",
                "timeCritical" : false
              },
              "parameters" : [ {
                "start" : 252,
                "end" : 259,
                "nodeType" : "ASTLiteral",
                "code" : "address",
                "line" : 12,
                "lineEnd" : 12,
                "identifier" : null,
                "constraint" : null,
                "value" : "address",
                "timeCritical" : false
              } ],
              "classPointed" : null,
              "timeCall" : false,
              "timeCritical" : false
            },
            "usedVars" : [ "this", "address" ],
            "env" : [ ],
            "isResetTime" : false,
            "resetExpression" : "",
            "expressionName" : "call_to_send_icmp_request",
            "timeCritical" : false
          }, {
            "start" : 278,
            "end" : 311,
            "nodeType" : "ASTRE",
            "code" : "this.receive_icmp_reply(address);",
            "line" : 13,
            "lineEnd" : 13,
            "identifier" : null,
            "constraint" : null,
            "expression" : {
              "start" : 278,
              "end" : 310,
              "nodeType" : "ASTMethodCall",
              "code" : "this.receive_icmp_reply(address)",
              "line" : 13,
              "lineEnd" : 13,
              "identifier" : null,
              "constraint" : null,
              "methodName" : "receive_icmp_reply",
              "exprCallee" : {
                "start" : 278,
                "end" : 282,
                "nodeType" : "ASTLiteral",
                "code" : "this",
                "line" : 13,
                "lineEnd" : 13,
                "identifier" : null,
                "constraint" : null,
                "value" : "this",
                "timeCritical" : false
              },
              "parameters" : [ {
                "start" : 302,
                "end" : 309,
                "nodeType" : "ASTLiteral",
                "code" : "address",
                "line" : 13,
                "lineEnd" : 13,
                "identifier" : null,
                "constraint" : null,
                "value" : "address",
                "timeCritical" : false
              } ],
              "classPointed" : null,
              "timeCall" : false,
              "timeCritical" : false
            },
            "usedVars" : [ "this", "address" ],
            "env" : [ ],
            "isResetTime" : false,
            "resetExpression" : "",
            "expressionName" : "call_to_receive_icmp_reply",
            "timeCritical" : false
          }, {
            "start" : 328,
            "end" : 340,
            "nodeType" : "ASTReturn",
            "code" : "return true;",
            "line" : 14,
            "lineEnd" : 14,
            "identifier" : null,
            "constraint" : null,
            "expr" : {
              "start" : 335,
              "end" : 339,
              "nodeType" : "ASTRE",
              "code" : "true",
              "line" : 14,
              "lineEnd" : 14,
              "identifier" : null,
              "constraint" : null,
              "expression" : {
                "start" : 335,
                "end" : 339,
                "nodeType" : "ASTLiteral",
                "code" : "true",
                "line" : 14,
                "lineEnd" : 14,
                "identifier" : null,
                "constraint" : null,
                "value" : "true",
                "timeCritical" : false
              },
              "usedVars" : [ "true" ],
              "env" : [ ],
              "isResetTime" : false,
              "resetExpression" : "",
              "expressionName" : "true",
              "timeCritical" : false
            },
            "timeCritical" : false
          } ],
          "expr" : {
            "start" : 187,
            "end" : 194,
            "nodeType" : "ASTRE",
            "code" : "    //d",
            "line" : 11,
            "lineEnd" : 11,
            "identifier" : null,
            "constraint" : null,
            "expression" : {
              "start" : 187,
              "end" : 194,
              "nodeType" : "ASTLiteral",
              "code" : "    //d",
              "line" : 11,
              "lineEnd" : 11,
              "identifier" : null,
              "constraint" : null,
              "value" : "timeout",
              "timeCritical" : false
            },
            "usedVars" : [ "timeout" ],
            "env" : [ ],
            "isResetTime" : false,
            "resetExpression" : "",
            "expressionName" : "timeout",
            "timeCritical" : false
          },
          "timeCritical" : false
        } ],
        "timeCritical" : false
      },
      "catchBranch" : [ {
        "start" : 367,
        "end" : 432,
        "nodeType" : "ASTCatchBranch",
        "code" : "catch (DeadlineException e) {\n            return false;\n        }",
        "line" : 16,
        "lineEnd" : 18,
        "identifier" : null,
        "constraint" : null,
        "stms" : [ {
          "start" : 409,
          "end" : 422,
          "nodeType" : "ASTReturn",
          "code" : "return false;",
          "line" : 17,
          "lineEnd" : 17,
          "identifier" : null,
          "constraint" : null,
          "expr" : {
            "start" : 416,
            "end" : 421,
            "nodeType" : "ASTRE",
            "code" : "false",
            "line" : 17,
            "lineEnd" : 17,
            "identifier" : null,
            "constraint" : null,
            "expression" : {
              "start" : 416,
              "end" : 421,
              "nodeType" : "ASTLiteral",
              "code" : "false",
              "line" : 17,
              "lineEnd" : 17,
              "identifier" : null,
              "constraint" : null,
              "value" : "false",
              "timeCritical" : false
            },
            "usedVars" : [ "false" ],
            "env" : [ {
              "type" : "example.DeadlineException",
              "name" : "e",
              "id" : "e"
            }, {
              "type" : "int",
              "name" : "NUM_PING",
              "id" : "NUM_PING"
            }, {
              "type" : "example.List",
              "name" : "neighbors",
              "id" : "neighbors"
            } ],
            "isResetTime" : false,
            "resetExpression" : "",
            "expressionName" : "false",
            "timeCritical" : false
          },
          "timeCritical" : false
        } ],
        "expr" : {
          "start" : 374,
          "end" : 393,
          "nodeType" : "ASTVariable",
          "code" : "DeadlineException e",
          "line" : 16,
          "lineEnd" : 16,
          "identifier" : null,
          "constraint" : null,
          "name" : "e",
          "type" : "DeadlineException",
          "unit" : "UNKNOWN",
          "typePointed" : "example.DeadlineException",
          "typeNoArray" : "DeadlineException",
          "timeCritical" : false
        },
        "timeCritical" : false
      } ],
      "finallyBranch" : null,
      "timeCritical" : false
    } ],
    "declaredVar" : [ ],
    "timeVars" : [ ],
    "abstract" : false,
    "static" : false,
    "signature" : [ "IpAddress", "long" ],
    "synchronized" : false,
    "timeCritical" : false
  }, {
    "start" : 444,
    "end" : 632,
    "nodeType" : "ASTMethod",
    "code" : "void run() {\n\n        for (IpAddress curr : this.neighbors) {\n\n            bool isAlive = this.is_alive(100);\n            curr.setAlive(is_alive);\n\n            sleep(1000);\n        }\n    }",
    "line" : 21,
    "lineEnd" : 30,
    "identifier" : null,
    "constraint" : null,
    "name" : "run",
    "returnType" : "void",
    "returnTypeUnit" : "UNKNOWN",
    "parameters" : [ ],
    "exceptionsThrowed" : [ ],
    "stms" : [ {
      "start" : 466,
      "end" : 626,
      "nodeType" : "ASTForEach",
      "code" : "for (IpAddress curr : this.neighbors) {\n\n            bool isAlive = this.is_alive(100);\n            curr.setAlive(is_alive);\n\n            sleep(1000);\n        }",
      "line" : 23,
      "lineEnd" : 29,
      "identifier" : null,
      "constraint" : null,
      "var" : {
        "start" : 471,
        "end" : 485,
        "nodeType" : "ASTVariable",
        "code" : "IpAddress curr",
        "line" : 23,
        "lineEnd" : 23,
        "identifier" : null,
        "constraint" : null,
        "name" : "curr",
        "type" : "IpAddress",
        "unit" : "UNKNOWN",
        "typePointed" : "example.IpAddress",
        "typeNoArray" : "IpAddress",
        "timeCritical" : false
      },
      "expr" : {
        "start" : 488,
        "end" : 502,
        "nodeType" : "ASTRE",
        "code" : "this.neighbors",
        "line" : 23,
        "lineEnd" : 23,
        "identifier" : null,
        "constraint" : null,
        "expression" : {
          "start" : 488,
          "end" : 502,
          "nodeType" : "ASTAttributeAccess",
          "code" : "this.neighbors",
          "line" : 23,
          "lineEnd" : 23,
          "identifier" : null,
          "constraint" : null,
          "attributeName" : "neighbors",
          "variableName" : {
            "start" : 488,
            "end" : 492,
            "nodeType" : "ASTLiteral",
            "code" : "this",
            "line" : 23,
            "lineEnd" : 23,
            "identifier" : null,
            "constraint" : null,
            "value" : "this",
            "timeCritical" : false
          },
          "timeCritical" : false
        },
        "usedVars" : [ "this" ],
        "env" : [ {
          "type" : "example.IpAddress",
          "name" : "curr",
          "id" : "curr"
        }, {
          "type" : "example.bool",
          "name" : "isAlive",
          "id" : "isAlive"
        }, {
          "type" : "int",
          "name" : "NUM_PING",
          "id" : "NUM_PING"
        }, {
          "type" : "example.List",
          "name" : "neighbors",
          "id" : "neighbors"
        } ],
        "isResetTime" : false,
        "resetExpression" : "",
        "expressionName" : "ASTAttributeAccess",
        "timeCritical" : false
      },
      "stms" : [ {
        "start" : 519,
        "end" : 553,
        "nodeType" : "ASTRE",
        "code" : "bool isAlive = this.is_alive(100);",
        "line" : 25,
        "lineEnd" : 25,
        "identifier" : null,
        "constraint" : null,
        "expression" : {
          "start" : 519,
          "end" : 553,
          "nodeType" : "ASTVariableDeclaration",
          "code" : "bool isAlive = this.is_alive(100);",
          "line" : 25,
          "lineEnd" : 25,
          "identifier" : null,
          "constraint" : null,
          "type" : "bool",
          "name" : {
            "start" : 524,
            "end" : 531,
            "nodeType" : "ASTLiteral",
            "code" : "isAlive",
            "line" : 25,
            "lineEnd" : 25,
            "identifier" : null,
            "constraint" : null,
            "value" : "isAlive",
            "timeCritical" : false
          },
          "expr" : {
            "start" : 534,
            "end" : 552,
            "nodeType" : "ASTMethodCall",
            "code" : "this.is_alive(100)",
            "line" : 25,
            "lineEnd" : 25,
            "identifier" : null,
            "constraint" : null,
            "methodName" : "is_alive",
            "exprCallee" : {
              "start" : 534,
              "end" : 538,
              "nodeType" : "ASTLiteral",
              "code" : "this",
              "line" : 25,
              "lineEnd" : 25,
              "identifier" : null,
              "constraint" : null,
              "value" : "this",
              "timeCritical" : false
            },
            "parameters" : [ {
              "start" : 548,
              "end" : 551,
              "nodeType" : "ASTLiteral",
              "code" : "100",
              "line" : 25,
              "lineEnd" : 25,
              "identifier" : null,
              "constraint" : null,
              "value" : "100",
              "timeCritical" : false
            } ],
            "classPointed" : "example.TestNeighbors",
            "timeCall" : false,
            "timeCritical" : false
          },
          "typePointed" : "example.bool",
          "nameString" : "isAlive",
          "timeCritical" : false
        },
        "usedVars" : [ "isAlive", "this", "100" ],
        "env" : [ {
          "type" : "example.IpAddress",
          "name" : "curr",
          "id" : "curr"
        }, {
          "type" : "example.bool",
          "name" : "isAlive",
          "id" : "isAlive"
        }, {
          "type" : "int",
          "name" : "NUM_PING",
          "id" : "NUM_PING"
        }, {
          "type" : "example.List",
          "name" : "neighbors",
          "id" : "neighbors"
        } ],
        "isResetTime" : false,
        "resetExpression" : "",
        "expressionName" : "Declaration_isAlive",
        "timeCritical" : false
      }, {
        "start" : 566,
        "end" : 590,
        "nodeType" : "ASTRE",
        "code" : "curr.setAlive(is_alive);",
        "line" : 26,
        "lineEnd" : 26,
        "identifier" : null,
        "constraint" : null,
        "expression" : {
          "start" : 566,
          "end" : 589,
          "nodeType" : "ASTMethodCall",
          "code" : "curr.setAlive(is_alive)",
          "line" : 26,
          "lineEnd" : 26,
          "identifier" : null,
          "constraint" : null,
          "methodName" : "setAlive",
          "exprCallee" : {
            "start" : 566,
            "end" : 570,
            "nodeType" : "ASTLiteral",
            "code" : "curr",
            "line" : 26,
            "lineEnd" : 26,
            "identifier" : null,
            "constraint" : null,
            "value" : "curr",
            "timeCritical" : false
          },
          "parameters" : [ {
            "start" : 580,
            "end" : 588,
            "nodeType" : "ASTLiteral",
            "code" : "is_alive",
            "line" : 26,
            "lineEnd" : 26,
            "identifier" : null,
            "constraint" : null,
            "value" : "is_alive",
            "timeCritical" : false
          } ],
          "classPointed" : null,
          "timeCall" : false,
          "timeCritical" : false
        },
        "usedVars" : [ "curr", "is_alive" ],
        "env" : [ {
          "type" : "example.IpAddress",
          "name" : "curr",
          "id" : "curr"
        }, {
          "type" : "example.bool",
          "name" : "isAlive",
          "id" : "isAlive"
        }, {
          "type" : "int",
          "name" : "NUM_PING",
          "id" : "NUM_PING"
        }, {
          "type" : "example.List",
          "name" : "neighbors",
          "id" : "neighbors"
        } ],
        "isResetTime" : false,
        "resetExpression" : "",
        "expressionName" : "call_to_setAlive",
        "timeCritical" : false
      }, {
        "start" : 604,
        "end" : 616,
        "nodeType" : "ASTRE",
        "code" : "sleep(1000);",
        "line" : 28,
        "lineEnd" : 28,
        "identifier" : null,
        "constraint" : {
          "elm" : null,
          "category" : "intermediateModelHelper.heuristic.definition.AnnotatedTypes",
          "value" : "1000",
          "line" : 28,
          "runtimeConstraints" : [ {
            "className" : "example.TestNeighbors",
            "methodName" : "run",
            "line" : 28,
            "varName" : "1000"
          } ]
        },
        "expression" : {
          "start" : 604,
          "end" : 615,
          "nodeType" : "ASTMethodCall",
          "code" : "sleep(1000)",
          "line" : 28,
          "lineEnd" : 28,
          "identifier" : null,
          "constraint" : null,
          "methodName" : "sleep",
          "exprCallee" : null,
          "parameters" : [ {
            "start" : 610,
            "end" : 614,
            "nodeType" : "ASTLiteral",
            "code" : "1000",
            "line" : 28,
            "lineEnd" : 28,
            "identifier" : null,
            "constraint" : null,
            "value" : "1000",
            "timeCritical" : false
          } ],
          "classPointed" : "java.lang.Thread",
          "timeCall" : true,
          "timeCritical" : false
        },
        "usedVars" : [ "1000" ],
        "env" : [ {
          "type" : "example.IpAddress",
          "name" : "curr",
          "id" : "curr"
        }, {
          "type" : "example.bool",
          "name" : "isAlive",
          "id" : "isAlive"
        }, {
          "type" : "int",
          "name" : "NUM_PING",
          "id" : "NUM_PING"
        }, {
          "type" : "example.List",
          "name" : "neighbors",
          "id" : "neighbors"
        } ],
        "isResetTime" : false,
        "resetExpression" : "",
        "expressionName" : "call_to_sleep",
        "timeCritical" : true
      } ],
      "timeCritical" : false
    } ],
    "declaredVar" : [ {
      "type" : "bool",
      "name" : "isAlive",
      "id" : "isAlive_0"
    } ],
    "timeVars" : [ "1000" ],
    "abstract" : false,
    "static" : false,
    "signature" : [ ],
    "synchronized" : false,
    "timeCritical" : false
  } ],
  "implmentsInterfaces" : [ ],
  "realPackageName" : "example",
  "importsAsString" : [ ],
  "timeCritical" : false
} ]